plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id "org.flywaydb.flyway" version "7.7.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.5'
	implementation 'org.flywaydb:flyway-core'
	implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '1.3.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation "io.rest-assured:rest-assured:4.1.1"
    testImplementation "io.rest-assured:json-path:4.1.1"
    testImplementation "io.rest-assured:xml-path:4.1.1"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
	compile group: 'com.opencsv', name: 'opencsv', version: '5.2'

}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/gofdb'
	user = 'postgres'
	password = 'postgres'
}
